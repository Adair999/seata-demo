server.port=18081
spring.application.name=business-service
mysql.server.ip=192.168.64.128
mysql.server.port=3306
mysql.db.name=seata
mysql.user.name=root
mysql.user.password=123456
logging.level.io.seata=debug
#====================================注册中心配置===============================================
spring.cloud.nacos.discovery.server-addr=192.168.64.128:8848
spring.cloud.nacos.config.server-addr=192.168.64.128:8848
#====================================Seata配置===============================================
seata.enabled=true
seata.registry.nacos.serverAddr=192.168.64.128
seata.tx-service-group=my_test_tx_group
#my_test_tx_group为分组，配置项值为TC集群名
seata.service.vgroup-mapping.my_test_tx_group=default
# registry
## 事务注册中心，根据需要切换注册中心类型，此处为nacos
seata.registry.type=nacos
seata.registry.nacos.cluster=default
# ClientProperties.class
#异步提交缓存队列长度，默认10000。二阶段提交成功，RM异步清理undo队列
seata.client.rm.async-commit-buffer-limit=10000
#一阶段结果上报TC重试次数，默认5次
seata.client.rm-report-retry-count=5
#自动刷新缓存中的表结构，默认false
seata.client.rm.table-meta-check-enable=false
#是否上报一阶段成功，true、false，默认true用于保持分支事务生命周期记录完整，false可提高不少性能
seata.client.rm-report-success-enable=false
seata.client.rm.sql-parser-type=druid
#一阶段结果上报TC重试次数，默认5次
seata.client.tm-commit-retry-count=5
#一阶段全局回滚结果上报TC重试次数，默认1次，建议大于1
seata.client.tm-rollback-retry-count=5
# LockProperties.class
#校验或占用全局锁重试间隔，默认10，单位毫秒
seata.client.rm.lock.lock-retry-interval=10
#校验或占用全局锁重试次数，默认30
seata.client.rm.lock.lock-retry-times=30
#分支事务与其它全局回滚事务冲突时锁策略，默认true，优先释放本地锁让回滚成功
seata.client.rm.lock.lock-retry-policy-branch-rollback-on-conflict=true
# LogProperties.class
#日志异常输出概率，默认100，目前用于undo回滚失败时异常堆栈输出，百分之一的概率输出，回滚失败基本是脏数据，无需输出堆栈占用硬盘空间
seata.client.log.exception-rate=100
# ServiceProperties
#降级开关（待实现），默认false。业务侧根据连续错误数自动降级不走seata事务
seata.service.enable-degrade=false
#全局事务开关，默认false。false为开启，true为关闭
seata.service.disable-global-transaction=false
# ShutdownProperties
seata.transport.shutdown.wait=3
# SpringProperties
#数据源自动代理开关，默认false关闭
seata.client.support.spring.datasource-autoproxy=true
# ThreadFactoryProperties
seata.transport.thread-factory.boss-thread-prefix=NettyBoss
seata.transport.thread-factory.worker-thread-prefix=NettyServerNIOWorker
seata.transport.thread-factory.server-executor-thread-prefix=NettyServerBizHandler
seata.transport.thread-factory.share-boss-worker=false
seata.transport.thread-factory.client-selector-thread-prefix=NettyClientSelector
seata.transport.thread-factory.client-selector-thread-size=1
seata.transport.thread-factory.client-worker-thread-prefix=NettyClientWorkerThread
seata.transport.thread-factory.boss-thread-size=1
seata.transport.thread-factory.worker-thread-size=8
# TransportProperties
seata.transport.type=TCP
seata.transport.server=NIO
#client和server通信心跳检测开关，默认true开启
seata.transport.heartbeat=true
#client和server通信编解码方式，seata（ByteBuf）、protobuf、kryo、hession，默认seata
seata.transport.serialization=seata
#client和server通信数据压缩方式，none、gzip，默认none
seata.transport.compressor=none
#客户端事务消息请求是否批量合并发送，默认true，false单条发送
seata.transport.enable-client-batch-send-request=false
# UndoProperties
#二阶段回滚镜像校验，默认true开启，false关闭
seata.client.undo.undo-data-validation=true
#undo序列化方式，默认jackson
seata.client.undo.undo-log-serialization=jackson
#自定义undo表名，默认undo_log
seata.client.undo.undo-log-table=undo_log